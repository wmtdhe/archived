(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{370:function(t,s,a){"use strict";a.r(s);var n=a(25),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),a("p",[t._v("JavaScript是一门"),a("strong",[t._v("单线程")]),t._v("的语言，JS引擎中负责解析执行JS代码的线程只有一个（主线程）")]),t._v(" "),a("h3",{attrs:{id:"js同步执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js同步执行"}},[t._v("#")]),t._v(" JS同步执行")]),t._v(" "),a("p",[t._v("在一个函数返回结果的时候，调用者能够拿到预期结果，则这个函数为同步函数。")]),t._v(" "),a("h4",{attrs:{id:"执行上下文（execution-context）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文（execution-context）"}},[t._v("#")]),t._v(" 执行上下文（Execution Context）")]),t._v(" "),a("p",[t._v("执行上下文，指的是评估和运行JS的环境。JS种的任何代码都运行在执行上下文种，执行上下文分文3种：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("全局执行上下文")]),t._v(" 默认的最基本的执行上下文，一个程序只存在一个全局上下文。不在任何函数中的代码都在全局上下文中。全局执行上下文做了两件事：\n"),a("ul",[a("li",[t._v("创建一个全局对象 - 浏览器中的"),a("code",[t._v("window")]),t._v("，node中的"),a("code",[t._v("global")])]),t._v(" "),a("li",[t._v("将"),a("code",[t._v("this")]),t._v("指向这个全局对象")])])]),t._v(" "),a("li",[a("strong",[t._v("函数执行上下文")]),t._v(" 每次调用函数时都会为该函数创建一个新的执行上下文。每个函数都拥有自己的执行上下文，但只有在"),a("strong",[t._v("函数被调用时才会被创建")]),t._v("。一个程序可存在多个函数执行上下文。")]),t._v(" "),a("li",[a("strong",[t._v("eval执行上下文")])])]),t._v(" "),a("h4",{attrs:{id:"执行栈-（call-stack）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行栈-（call-stack）"}},[t._v("#")]),t._v(" 执行栈 （Call Stack）")]),t._v(" "),a("p",[t._v("执行栈用于存储代码执行期间创建的所以执行上下文，当一个执行上下文中当代码执行完会从执行栈中弹出。")]),t._v(" "),a("p",[t._v("当JS引擎"),a("strong",[t._v("首次")]),t._v("读取代码时，会创建一个全局执行上下文推入执行栈。每当有函数被调用时，JS引擎都会为其创建一个函数执行上下文并推入执行栈栈顶。")]),t._v(" "),a("p",[t._v("一个简单的例子：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("second")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'in second'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("first")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'starts in first'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("second")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ends in first'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("first")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"/execution-stack.png",alt:"执行栈压入过程"}})])])}),[],!1,null,null,null);s.default=r.exports}}]);