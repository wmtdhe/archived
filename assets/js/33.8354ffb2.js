(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{385:function(t,e,v){"use strict";v.r(e);var _=v(25),s=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"什么是xss"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是xss"}},[t._v("#")]),t._v(" 什么是XSS")]),t._v(" "),v("p",[v("code",[t._v("XSS")]),t._v(" —— "),v("code",[t._v("Cross Site Scripting")]),t._v("，即跨站脚本。XSS攻击指的是浏览器中执行恶意脚本，从而拿到用户的信息并进行操作。")]),t._v(" "),v("p",[t._v("这些操作一般可以：")]),t._v(" "),v("ol",[v("li",[t._v("窃取Cookie")]),t._v(" "),v("li",[t._v("监听用户行为，比如输入账号密码后直接发送到黑客服务器。")]),t._v(" "),v("li",[t._v("修改DOM伪造登录表单")]),t._v(" "),v("li",[t._v("在页面中产生浮窗广告")])]),t._v(" "),v("p",[t._v("通常XSS的实现由三种方法——"),v("strong",[t._v("存储型")]),t._v("、"),v("strong",[t._v("反射型")]),t._v("和"),v("strong",[t._v("文档型")]),t._v("。")]),t._v(" "),v("h3",{attrs:{id:"存储型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#存储型"}},[t._v("#")]),t._v(" 存储型")]),t._v(" "),v("p",[t._v("将脚本存储到了服务端的数据库，然后在客户端执行这些脚本时进行攻击。")]),t._v(" "),v("h3",{attrs:{id:"反射型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#反射型"}},[t._v("#")]),t._v(" 反射型")]),t._v(" "),v("p",[t._v("非持久化。没有存储到数据库")]),t._v(" "),v("p",[t._v("Example:")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("<form>\n    <input type='text' name='q'/>\n    <input type='submit'/>\n</form>\n\napp.use((ctx)=>{\n    let { q } = ctx.query;\n    ctx.body = q\n})\n")])])]),v("p",[t._v("如果用户直接输入"),v("code",[t._v("<script>alert(1)<\/script>")]),t._v("而后端没有过滤的话，会直接弹出alert。")]),t._v(" "),v("h2",{attrs:{id:"csrf"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[t._v("#")]),t._v(" CSRF")]),t._v(" "),v("h3",{attrs:{id:"什么是csrf攻击？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是csrf攻击？"}},[t._v("#")]),t._v(" 什么是CSRF攻击？")]),t._v(" "),v("p",[t._v("Cross-site request forgery——即跨站请求伪造，指的是黑客诱导用户点击链接，打开黑客的网站，然后黑客利用"),v("strong",[t._v("用户目前的登录状态")]),t._v("发起跨站请求。")]),t._v(" "),v("h4",{attrs:{id:"自动发送get"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#自动发送get"}},[t._v("#")]),t._v(" 自动发送GET")]),t._v(" "),v("p",[t._v("比如在黑客网站中：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("<img src='https://xxx.com/info?user=xx&count=10'>\n")])])]),v("p",[t._v("当你访问这个网站时，就会自动发送这个请求到xxx.com，假定你已经在这个xxx.com登录了，黑客就会携带上你在这个网站上的cookie访问到xxx.com。")]),t._v(" "),v("h4",{attrs:{id:"自动发送post"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#自动发送post"}},[t._v("#")]),t._v(" 自动发送POST")]),t._v(" "),v("h4",{attrs:{id:"诱导点击发送get请求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#诱导点击发送get请求"}},[t._v("#")]),t._v(" 诱导点击发送GET请求")]),t._v(" "),v("h4",{attrs:{id:"防范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#防范"}},[t._v("#")]),t._v(" 防范")]),t._v(" "),v("ol",[v("li",[t._v("利用Cookie的SameSite属性")])]),t._v(" "),v("p",[v("code",[t._v("SameSite")]),t._v("有三个值可取，"),v("code",[t._v("Strict")]),t._v(", "),v("code",[t._v("Lax")]),t._v(", "),v("code",[t._v("None")]),t._v("。")]),t._v(" "),v("p",[t._v("在"),v("code",[t._v("Strict")]),t._v("模式下，浏览器完全禁止第三方请求携带Cookie。比如请求wmtdhe.com网站只能在wmtdhe.com域名中的请求才能携带Cookie。")]),t._v(" "),v("p",[v("code",[t._v("Lax")]),t._v("，宽松一点，只能在get方法或者a标签发送get请求时可以携带Cookie")]),t._v(" "),v("p",[v("code",[t._v("None")]),t._v("，默认模式，请求会自动带上Cookie")]),t._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[t._v("验证来源站点")])]),t._v(" "),v("p",[t._v("通过请求头中的两个字段："),v("code",[t._v("Origin")]),t._v("和"),v("code",[t._v("Referer")]),t._v("。")]),t._v(" "),v("p",[v("code",[t._v("Origin")]),t._v("只包含域名信息，而"),v("code",[t._v("Referer")]),t._v("包含了具体路径。")]),t._v(" "),v("p",[t._v("但是Ajax可以自定义伪造referer和origin，安全性较差。")]),t._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[t._v("CSRF Token")])]),t._v(" "),v("p",[t._v("当客户端向服务端请求时，服务端会生成一串CSRF Token返回给客户端，服务端会把这串token存在当前用户的session中，从别的网站发起的伪造请求是拿不到这串token的，因此会被服务端拒绝请求。")])])}),[],!1,null,null,null);e.default=s.exports}}]);